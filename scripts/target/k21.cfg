#
# Freescale Kinetis k21 devices
#

#
# k21 devices support both JTAG and SWD transports.
#
source [find target/swj-dp.tcl]

if { [info exists CHIPNAME] } {
    set _CHIPNAME $CHIPNAME
} else {
    set _CHIPNAME k21
}

if { [info exists ENDIAN] } {
    set _ENDIAN $ENDIAN
} else {
    set _ENDIAN little
}

# Work-area is a space in RAM used for flash programming
# By default use 4kB
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x1000
}

if { [info exists CPUTAPID] } {
    set _CPUTAPID $CPUTAPID
} else {
    set _CPUTAPID 0x4BA00477
}

swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUTAPID

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian $_ENDIAN -chain-position $_CHIPNAME.cpu

$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME kinetis 0 0 0 0 $_TARGETNAME

#reset_config srst_only srst_push_pull
reset_config srst_only srst_nogate connect_assert_srst
#cortex_m reset_config srst

adapter_khz 2000
adapter_nsrst_delay 0

$_TARGETNAME configure -event gdb-attach {

	if [catch {kinetis mdm check_security} ] {
		echo "flash unwritable (secured)"
		#adapter_khz 5
		kinetis mdm mass_erase
		#ftdi_set_signal GPIOL1 0
		echo ""
		echo "PRESS BUTTON"
		echo ""
		sleep 5000
		reset halt
		if [catch {kinetis mdm check_security} ] {
			# If we still can't access it after a mass erase then we have big problems.
			shutdown
		}
		#adapter_khz 3000
	} else {
		echo "flash writable (unsecured)"
	}
	
	#halt
	reset init
}

#init
#reset init
